swagger: '2.0'
info:
  x-ibm-name: oauth-utils
  title: OAuth Utils
  version: 1.0.0
schemes:
  - https
host: $(catalog.host)
basePath: /oauth-utils
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basic-1:
    type: basic
    description: ''
    x-ibm-authentication-url:
      url: 'https://httpbin.org/get'
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
      - switch:
          title: switch
          case:
            - condition: "((request.verb==='GET')&&(api.operation.path==='/authentication-url'))"
              execute:
                - invoke:
                    title: invoke
                    timeout: 60
                    verb: GET
                    cache-response: protocol
                    cache-ttl: 900
                    stop-on-error: []
                    version: 1.0.0
                    target-url: 'https://raw.githubusercontent.com/YanivYuzis/JsonStore/master/bankData.json'
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: "var reqauth = apim.getvariable('request.authorization').split(' ');\nvar splitval = new Buffer((reqauth[1] || ''), 'base64').toString('utf8').split(':');\nvar username = splitval[0] || '';\nvar password = splitval[1] || '';\n\napim.readInputAsJSON(function(err, bankData) {\n    try {\n        var storedPassword = bankData.allUsers.find(item => item.id === username).password;\n\n        if (storedPassword) {\n            if (password === storedPassword) {\n                session.output.write({ \\\"authenticatedUser\\\": username });\n                //apim.setvariable('message.headers.api-authenticated-credential', 'cn=' + username + ',email=' + username + '@poon.com');\n                apim.setvariable('message.headers.api-authenticated-credential', username);\n                apim.setvariable('message.status.code', 200);\n                apim.setvariable('message.headers.Cache-Control', 'no-cache', 'add')\n                apim.output('application/json');\n            } else {\n                apim.setvariable('message.status.code', 401);\n                apim.setvariable('message.headers.Cache-Control', 'no-cache', 'add')\n                apim.output({\"httpCode\": \"401\", \"httpMessage\": \"Unauthorized\", \"moreInformation\": \"wrong password\"});\n            }\n        } else {\n            apim.setvariable('message.status.code', 401);\n            apim.setvariable('message.headers.Cache-Control', 'no-cache', 'add')\n            apim.output({\"httpCode\": \"401\", \"httpMessage\": \"Unauthorized\", \"moreInformation\": \"user is not registered\"});\n        }\n    } catch (e) {\n        apim.setvariable('message.status.code', 401);\n        apim.setvariable('message.headers.Cache-Control', 'no-cache', 'add')\n        apim.output({\"httpCode\": \"401\", \"httpMessage\": \"Unauthorized\", \"moreInformation\": \"unknown arror\"});\n        //no-store\n    }\n    \n});\n\n"
            - condition: "((request.verb==='GET')&&(api.operation.path==='/onboard-login'))"
              execute:
                - map:
                    title: map
                    inputs: {}
                    outputs:
                      html:
                        schema:
                          type: string
                        variable: message.body
                    actions:
                      - set: html
                        default: "<!DOCTYPE html> <html>   <head>     <title>Dummy Application OAuth Test</title>   </head>   <body>     <h1>Dummy Application OAuth Test</h1>     <h4>Client ID:</h4>     <input id=\"client_id_helper\" style=\"width:300px\" type=\"text\" name=\"client_id_helper\" oninput=\"clientChanged()\">     <h4>Client Secret:</h4>     <input id=\"client_secret\" style=\"width:350px\" type=\"text\" name=\"client_secret\">     <form target=\"_blank\" id=\"authorize_form\" action=\"\">       <input type=\"hidden\" id=\"client_id\" style=\"width:300px\" type=\"text\" name=\"client_id\">       <h4>Redirect URL:</h4>       <input id=\"redirect_uri\" style=\"width:550px\" type=\"text\" name=\"redirect_uri\">       <h4>Scope:</h4>       <input id=\"scope\" style=\"width:150px\" type=\"text\" name=\"scope\">       <h4>Response Type:</h4>       <select id=\"response_type\" name=\"response_type\" onChange=\"typeChanged(this.options[this.selectedIndex].value)\">         <option value=\"code\">Code</option>         <option value=\"token\">Token</option>       </select>       <br><br>     </form>     <button style=\"font-size:15px;\" type=\"submit\" form=\"authorize_form\" value=\"Authorize\">Authorize</button>     <br><br>     <div id=\"token_form\">       <h4>Access Code:</h4>       <input id=\"access_code\" style=\"width:550px\" type=\"text\" name=\"access_code\">       <br><br>       <button style=\"font-size:15px;\" onclick=\"getToken()\">Get Token</button>       <p id=\"getTokenResponse\"></p>       <br>     </div>     <div id=\"test_panel\" style=\"display: none;\">       <button style=\"font-size:20px;\" onclick=\"testPanel()\">Test Panel</button>       <br>     </div>     <script>       var protocol = window.location.protocol;       var port = window.location.port;       var hostName = window.location.hostname;       var organization = new URL(window.location.href).pathname.split('/')[1];       var catalog = new URL(window.location.href).pathname.split('/')[2];        var urlParams = new URLSearchParams(window.location.search);       var clientId = urlParams.get('ClientID') || urlParams.get('ClientId') || urlParams.get('clientID') || urlParams.get('clientId') || urlParams.get('clientid') || urlParams.get('client_id') || \"\";       var clientSecret = urlParams.get('ClientSecret') || urlParams.get('clientSecret') || urlParams.get('clientsecret') || urlParams.get('client_secret') || \"\";       var redirectUrl = urlParams.get('RedirectUrl') || urlParams.get('RedirectURL') || urlParams.get('redirectURL') || urlParams.get('redirectUrl') || urlParams.get('redirect_url') || protocol +'//'+ hostName + (port ? ':' + port: '') + '/' + organization + '/' + catalog + '/oauth-utils/redirect-url';       var scope = urlParams.get('Scope') || urlParams.get('scope') || \"view_accounts\";       var response_type = urlParams.get('ResponseType') || urlParams.get('response_type') || urlParams.get('responsetype') || urlParams.get('responseType') || \"code\";        document.getElementById('client_id').value = clientId;       document.getElementById('client_id_helper').value = clientId;       document.getElementById('client_secret').value = clientSecret;       document.getElementById('redirect_uri').value = redirectUrl;       document.getElementById('scope').value = scope;       document.getElementById('response_type').value = response_type;        document.getElementById('authorize_form').action = protocol +'//'+ hostName + (port ? ':' + port: '') + '/' + organization + '/' + catalog + '/oauth-provider/oauth2/authorize';        function clientChanged() {         document.getElementById(\"client_id\").value = document.getElementById('client_id_helper').value;       }        function typeChanged(value) {         var token_form = document.getElementById(\"token_form\");          if (value === \"code\") {           token_form.style.display = \"block\";         } else if (value === \"token\") {           token_form.style.display = \"none\";         }       }        function getToken() {         var test_panel = document.getElementById(\"test_panel\");         test_panel.style.display = \"none\";          var xmlhttp = new XMLHttpRequest();         var url = protocol +'//'+ hostName + (port ? ':' + port: '') + '/' + organization + '/' + catalog + '/oauth-provider/oauth2/token';         var accessCode = document.getElementById('access_code').value;          clientId = document.getElementById('client_id').value;         clientSecret = document.getElementById('client_secret').value;         redirectUrl = document.getElementById('redirect_uri').value;         scope = document.getElementById('scope').value;          xmlhttp.onreadystatechange = function() {           if (this.readyState == 4) {             myFunction(this.responseText, this.status);           }         };         xmlhttp.open(\"POST\", url, true);         xmlhttp.setRequestHeader(\"Authorization\", \"Basic \" + btoa(clientId + \":\" + clientSecret));         xmlhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");         xmlhttp.send(\"grant_type=authorization_code&code=\" + accessCode + \"&redirect_uri=\" + redirectUrl + \"&scope=\" + scope);       }        function myFunction(responseText, status) {         document.getElementById(\"getTokenResponse\").innerHTML = responseText;         if (status === 200) {           test_panel.style.display = \"block\";         }       }        function testPanel() {         window.location.href = 'redirect-url?token=' + JSON.parse(document.getElementById(\"getTokenResponse\").innerHTML).access_token;       }     </script>   </body> </html>"
                    version: 1.0.0
                - set-variable:
                    title: set-variable
                    actions:
                      - set: message.headers.content-type
                        value: text/html; charset=utf-8
                    version: 1.0.0
            - condition: "((request.verb==='GET')&&(api.operation.path==='/redirect-url'))"
              execute:
                - map:
                    title: map
                    inputs: {}
                    outputs:
                      html:
                        schema:
                          type: string
                        variable: message.body
                    actions:
                      - set: html
                        default: "<!DOCTYPE html> <html>   <head>     <title>Dummy Redirect URL</title>   </head>   <body>     <div id=\"accessCoden\" style=\"display: none;\">       <h1>Access Code Info</h1>       <h4>Access Code:</h4>       <p id=\"codePlaceHolder\"></p>     </div>     <div id=\"accessToken\" style=\"display: none;\">       <h1>Access Token Info</h1>       <p id=\"oauthInfo\"></p>       <h2>Test Panel</h2>       <h4>Access Token:</h4>       <input style=\"width:500px\" id=\"tokenPlaceHolder\" type=\"text\">       <br><br>       <button style=\"font-size:15px;\" onclick=\"getConsent()\">Get Consent</button>       <p id=\"getConsentResponse\"></p>       <br>       <h4>Consent ID:</h4>       <input style=\"width:200px\" id=\"consentPlaceHolder\" type=\"text\">       <br><br>       <button style=\"font-size:15px;\" onclick=\"getAccountList()\">Test getAccountList</button>       <p id=\"getAccountListResponse\"></p>       <br><br>       <button style=\"font-size:28px;\" onclick=\"restart()\">Restart</button>       <br>     </div>      <script>       var accessCodenDiv = document.getElementById(\"accessCoden\");       var accessTokenDiv = document.getElementById(\"accessToken\");        var urlSearchParams = new URLSearchParams(window.location.search);       var code = urlSearchParams.get('code');       var token = urlSearchParams.get('token');        if (code) {         accessCodenDiv.style.display = \"block\";         accessTokenDiv.style.display = \"none\";          document.getElementById(\"codePlaceHolder\").innerHTML = code;       } else if (token) {         accessCodenDiv.style.display = \"none\";         accessTokenDiv.style.display = \"block\";          document.getElementById(\"tokenPlaceHolder\").value = token;       } else {         accessCodenDiv.style.display = \"none\";         accessTokenDiv.style.display = \"block\";          var urlParams = window.location.hash.substring(1) || \"\";         var accessToken = urlParams.split('=')[1].split('&')[0] || \"\";          document.getElementById(\"oauthInfo\").innerHTML = urlParams.replace(/&/g, '<br>');         document.getElementById(\"tokenPlaceHolder\").value = accessToken;       }        var protocol = window.location.protocol;       var organization = new URL(window.location.href).pathname.split('/')[1];       var catalog = new URL(window.location.href).pathname.split('/')[2];        function getConsent() {         document.getElementById(\"getConsentResponse\").innerHTML = \"\";          var xmlhttp = new XMLHttpRequest();         var url = '/' + organization + '/' + catalog + '/psd2/v1/consents';          xmlhttp.onreadystatechange = function() {           if (this.readyState == 4) {             var myArr = JSON.parse(this.responseText);             myFunction(myArr);           }         };         xmlhttp.open(\"POST\", url, true);         xmlhttp.setRequestHeader(\"Authorization\", 'Bearer ' + document.getElementById(\"tokenPlaceHolder\").value);         xmlhttp.setRequestHeader(\"X-Request-ID\", Math.random() * (999999999 - 100000000));         xmlhttp.send();          function myFunction(myArr) {           document.getElementById(\"getConsentResponse\").innerHTML = JSON.stringify(myArr);           document.getElementById(\"consentPlaceHolder\").value = myArr.consentId;         }       }        function getAccountList() {         document.getElementById(\"getAccountListResponse\").innerHTML =\"\";          var xmlhttp = new XMLHttpRequest();         var url = '/' + organization + '/' + catalog + '/psd2/v1/accounts';          xmlhttp.onreadystatechange = function() {           if (this.readyState == 4) {             var myArr = JSON.parse(this.responseText);             myFunction(myArr);           }         };         xmlhttp.open(\"GET\", url, true);         xmlhttp.setRequestHeader(\"Authorization\", 'Bearer ' + document.getElementById(\"tokenPlaceHolder\").value);         xmlhttp.setRequestHeader(\"Consent-ID\", document.getElementById(\"consentPlaceHolder\").value);         xmlhttp.setRequestHeader(\"X-Request-ID\", Math.random() * (999999999 - 100000000));         xmlhttp.send();          function myFunction(myArr) {           document.getElementById(\"getAccountListResponse\").innerHTML = JSON.stringify(myArr);         }       }        function restart() {         window.location.href = 'onboard-login';       }     </script>   </body> </html>"
                    version: 1.0.0
                - set-variable:
                    title: set-variable
                    actions:
                      - set: message.headers.content-type
                        value: text/html; charset=utf-8
                    version: 1.0.0
            - condition: "((request.verb==='GET')&&(api.operation.path==='/authorization-url'))"
              execute:
                - map:
                    title: map
                    inputs: {}
                    outputs:
                      html:
                        schema:
                          type: string
                        variable: message.body
                    actions:
                      - set: html
                        default: '<html lang="en" xml:lang="en">   <head><title>Request for permission</title></head>   <body class="customconsent">     <div>       <div>         <form method="post" enctype="application/x-www-form-urlencoded" action="authorize">           <AZ-INJECT-HIDDEN-INPUT-FIELDS/>           <p>Greeting...</p><DISPLAY-RESOURCE-OWNER/>           <p>This app </p><OAUTH-APPLICATION-NAME/><p> would like to access your data.</p>           <div>             <button class="cancel" type="submit" name="approve" value="false">No Thanks</button>             <button class="submit" type="submit" name="approve" value="true">Allow Access</button>           </div>         </form>       </div>       <AZ-INTERNAL-CUSTOM-FORM-ERROR/>     </div>   </body> </html>'
                    version: 1.0.0
                - set-variable:
                    title: set-variable
                    actions:
                      - set: message.headers.content-type
                        value: text/html; charset=utf-8
                    version: 1.0.0
            - condition: "((request.verb==='GET')&&(api.operation.path==='/myapp'))"
              execute:
                - map:
                    title: map
                    inputs: {}
                    outputs:
                      html:
                        schema:
                          type: string
                        variable: message.body
                    actions:
                      - set: html
                        default: "<!DOCTYPE html> <html>   <head>     <title>OAuth Test Application</title>   </head>   <body>     <div id=\"access_token_div\" style=\"display: none;\">       <h1>Access Token Info</h1>       <p id=\"oauth_info_place_holder\"></p>       <h4>Access Token:</h4>       <p id=\"access_token_place_holder\"></p>     </div>     <div id=\"access_code_div\" style=\"display: none;\">       <h1>Access Code Info</h1>       <h4>Access Code:</h4>       <p id=\"access_code_place_holder\"></p>     </div>     <div id=\"application_div\" style=\"display: none;\">       <h2>OAuth Test Application</h2>       <div id=\"app_authorize_div\" action=\"\">         <h4>Client ID:</h4>         <input id=\"client_id\" style=\"width:300px\" type=\"text\" name=\"client_id\">         <div id=\"client_secret_div\" action=\"\">           <h4>Client Secret:</h4>           <input id=\"client_secret\" style=\"width:350px\" type=\"text\" name=\"client_secret\">         </div>         <h4>Redirect URL:</h4>         <input id=\"redirect_uri\" style=\"width:550px\" type=\"text\" name=\"redirect_uri\">         <h4>Scope:</h4>         <input id=\"scope\" style=\"width:150px\" type=\"text\" name=\"scope\">         <h4>Response Type:</h4>         <select id=\"response_type\" name=\"response_type\" onChange=\"typeChanged(this.options[this.selectedIndex].value)\">           <option value=\"code\">Code</option>           <option value=\"token\">Token</option>         </select>         <br><br>         <button style=\"font-size:15px;\" onclick=\"callAuthorize()\">Authorize</button>         <br><br>       </div>       <div id=\"app_token_div\" style=\"display: none;\">         <h4>Access Code:</h4>         <input id=\"access_code\" style=\"width:850px\" type=\"text\" name=\"access_code\">         <br><br>         <button style=\"font-size:15px;\" onclick=\"callToken()\">Get Token</button>         <pre id=\"token_response\"></pre>       </div>       <div id=\"consent_test_div\" style=\"display: none;\">         <h4>Access Token:</h4>         <input id=\"access_token\" style=\"width:1000px\" type=\"text\" name=\"access_token\">         <br><br>         <button style=\"font-size:15px;\" onclick=\"getConsent()\">Get Consent</button>         <pre id=\"getConsentResponse\"></pre>       </div>       <div id=\"account_test_div\" style=\"display: none;\">         <h4>Consent ID:</h4>         <input style=\"width:200px\" id=\"consentPlaceHolder\" type=\"text\">         <br><br>         <button style=\"font-size:15px;\" onclick=\"getAccountList()\">Test getAccountList</button>         <input type=\"checkbox\" id=\"with_balance\" name=\"with_balance\" checked> With Balance?<br>         <pre id=\"getAccountListResponse\"></pre>       </div>       <br>       <button style=\"font-size:25px;\" onclick=\"restart()\">Restart</button>       <br><br>     </div>     <script>       var inApp = getCookie(\"inApp\") || \"false\";        var implicitToken = null;       try {         var hashParams = window.location.hash.substring(1) || null;         implicitToken = hashParams.split('=')[1].split('&')[0] || null;       } catch (e) {       }        var urlParams = new URLSearchParams(window.location.search);       var accessCode = urlParams.get('code');        var error = urlParams.get('error');       if (error) {         window.history.pushState({url: \"\" + getCookie(\"startPage\") + \"\"}, document.title, getCookie(\"startPage\"));         alert(error);       }        if (implicitToken && inApp === \"false\") {         document.getElementById(\"access_token_div\").style.display = \"block\";          document.getElementById(\"oauth_info_place_holder\").innerHTML = hashParams.replace(/&/g, '<br>');         document.getElementById(\"access_token_place_holder\").innerHTML = implicitToken;       } else if (accessCode && inApp === \"false\") {         document.getElementById(\"access_code_div\").style.display = \"block\";          document.getElementById(\"access_code_place_holder\").innerHTML = accessCode;       } else {         setCookie(\"inApp\", \"false\", 24);          document.getElementById(\"application_div\").style.display = \"block\";          var href = window.location.href;         var protocol = window.location.protocol;         var port = window.location.port;         var hostName = window.location.hostname;         var pathname = window.location.pathname;         var organization = new URL(window.location.href).pathname.split('/')[1];         var catalog = new URL(window.location.href).pathname.split('/')[2];          var clientId = urlParams.get('ClientID') || urlParams.get('ClientId') || urlParams.get('clientID') || urlParams.get('clientId') || urlParams.get('clientid') || urlParams.get('client_id') || getCookie(\"clientId\") || \"\";         var clientSecret = urlParams.get('ClientSecret') || urlParams.get('clientSecret') || urlParams.get('clientsecret') || urlParams.get('client_secret') || getCookie(\"clientSecret\") || \"\";         var redirectUrl = urlParams.get('RedirectUrl') || urlParams.get('RedirectURL') || urlParams.get('redirectURL') || urlParams.get('redirectUrl') || urlParams.get('redirect_url') || getCookie(\"redirectUrl\") || protocol +'//'+ hostName + (port ? ':' + port: '') + pathname;         var scope = urlParams.get('Scope') || urlParams.get('scope') || getCookie(\"scope\") || \"view_accounts\";         var responseType = urlParams.get('ResponseType') || urlParams.get('response_type') || urlParams.get('responsetype') || urlParams.get('responseType') || getCookie(\"responseType\") || \"code\";          document.getElementById('client_id').value = clientId;         document.getElementById('client_secret').value = clientSecret;         document.getElementById('redirect_uri').value = redirectUrl;         document.getElementById('scope').value = scope;         document.getElementById('response_type').value = responseType;          typeChanged(responseType);          if (implicitToken) {           document.getElementById('access_token').value = implicitToken;           document.getElementById(\"app_authorize_div\").style.display = \"none\";           document.getElementById(\"consent_test_div\").style.display = \"block\";            window.history.pushState({url: \"\" + getCookie(\"startPage\") + \"\"}, document.title, getCookie(\"startPage\"));         } else if (accessCode) {           document.getElementById('access_code').value = accessCode;           document.getElementById(\"app_authorize_div\").style.display = \"none\";           document.getElementById(\"app_token_div\").style.display = \"block\";            window.history.pushState({url: \"\" + getCookie(\"startPage\") + \"\"}, document.title, getCookie(\"startPage\"));         } else {           setCookie(\"startPage\", href, 24);         }          function typeChanged(value) {           if (value === \"code\") {             document.getElementById(\"client_secret_div\").style.display = \"block\";           } else if (value === \"token\") {             document.getElementById(\"client_secret_div\").style.display = \"none\";           }         }          function callAuthorize() {           setCookie(\"inApp\", \"true\", 0.05 );            setCookie(\"clientId\", document.getElementById('client_id').value, 24);           setCookie(\"clientSecret\", document.getElementById('client_secret').value, 24);           setCookie(\"redirectUrl\", document.getElementById('redirect_uri').value, 24);           setCookie(\"scope\", document.getElementById('scope').value, 24);           setCookie(\"responseType\", document.getElementById('response_type').value, 24);            var url = protocol +'//'+ hostName + (port ? ':' + port: '') + '/' + organization + '/' + catalog + '/oauth-provider/oauth2/authorize';           url = url + \"?response_type=\" + document.getElementById('response_type').value + \"&client_id=\" + document.getElementById('client_id').value + \"&redirect_uri=\" + document.getElementById('redirect_uri').value + \"&scope=\" + document.getElementById('scope').value;           window.location.href = url;         }          function callToken() {           document.getElementById(\"consent_test_div\").style.display = \"none\";           document.getElementById(\"token_response\").innerHTML = \"\";           document.getElementById(\"access_token\").value = \"\";            var xmlhttp = new XMLHttpRequest();           var url = protocol +'//'+ hostName + (port ? ':' + port: '') + '/' + organization + '/' + catalog + '/oauth-provider/oauth2/token';           var accessCode = document.getElementById('access_code').value;            clientId = document.getElementById('client_id').value;           clientSecret = document.getElementById('client_secret').value;           redirectUrl = document.getElementById('redirect_uri').value;           scope = document.getElementById('scope').value;            xmlhttp.onreadystatechange = function() {             if (this.readyState == 4) {               callTokenResponse(JSON.parse(this.responseText), this.status);             }           };           xmlhttp.open(\"POST\", url, true);           xmlhttp.setRequestHeader(\"Authorization\", \"Basic \" + btoa(clientId + \":\" + clientSecret));           xmlhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");           xmlhttp.send(\"grant_type=authorization_code&code=\" + accessCode + \"&redirect_uri=\" + redirectUrl + \"&scope=\" + scope);            function callTokenResponse(jsonResponse, status) {             document.getElementById(\"token_response\").innerHTML = JSON.stringify(jsonResponse, null, 2);              if (status === 200) {               document.getElementById(\"access_token\").value = jsonResponse.access_token;               document.getElementById(\"consent_test_div\").style.display = \"block\";             }           }         }          function getConsent() {           document.getElementById(\"account_test_div\").style.display = \"none\";           document.getElementById(\"getConsentResponse\").innerHTML = \"\";           document.getElementById(\"consentPlaceHolder\").value = \"\";            var xmlhttp = new XMLHttpRequest();           var url = '/' + organization + '/' + catalog + '/psd2/v1/consents';            xmlhttp.onreadystatechange = function() {             if (this.readyState == 4) {               getConsentResponse(JSON.parse(this.responseText), this.status);             }           };           xmlhttp.open(\"POST\", url, true);           xmlhttp.setRequestHeader(\"Authorization\", 'Bearer ' + document.getElementById(\"access_token\").value);           xmlhttp.setRequestHeader(\"X-Request-ID\", Math.random() * (999999999 - 100000000));           xmlhttp.send();            function getConsentResponse(jsonResponse, status) {             document.getElementById(\"getConsentResponse\").innerHTML = JSON.stringify(jsonResponse, null, 2);              if (status === 200) {               document.getElementById(\"consentPlaceHolder\").value = jsonResponse.consentId;               document.getElementById(\"account_test_div\").style.display = \"block\";             }           }         }          function getAccountList() {           document.getElementById(\"getAccountListResponse\").innerHTML =\"\";            var xmlhttp = new XMLHttpRequest();           var url = '/' + organization + '/' + catalog + '/psd2/v1/accounts?withBalance=' + document.getElementById(\"with_balance\").checked.toString();            xmlhttp.onreadystatechange = function() {             if (this.readyState == 4) {               getAccountListResponse(JSON.parse(this.responseText), this.status);             }           };           xmlhttp.open(\"GET\", url, true);           xmlhttp.setRequestHeader(\"Authorization\", 'Bearer ' + document.getElementById(\"access_token\").value);           xmlhttp.setRequestHeader(\"Consent-ID\", document.getElementById(\"consentPlaceHolder\").value);           xmlhttp.setRequestHeader(\"X-Request-ID\", Math.random() * (999999999 - 100000000));           xmlhttp.send();            function getAccountListResponse(jsonResponse, status) {             document.getElementById(\"getAccountListResponse\").innerHTML = JSON.stringify(jsonResponse, null, 2);           }         }          function restart() {           window.location.href = getCookie(\"startPage\");         }       }        function setCookie(cname, cvalue, exhours) {         var d = new Date();         d.setTime(d.getTime() + (exhours * 60 * 60 * 1000));         var expires = \"expires=\" + d.toGMTString();         document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";       }        function getCookie(cname) {         var name = cname + \"=\";         var decodedCookie = decodeURIComponent(document.cookie);         var ca = decodedCookie.split(';');         for(var i = 0; i < ca.length; i++) {           var c = ca[i];           while (c.charAt(0) == ' ') {             c = c.substring(1);           }           if (c.indexOf(name) == 0) {             return c.substring(name.length, c.length);           }         }         return \"\";       }     </script>   </body> </html>"
                    version: 1.0.0
                - set-variable:
                    title: set-variable
                    actions:
                      - set: message.headers.content-type
                        value: text/html; charset=utf-8
                    version: 1.0.0
            - condition: "((request.verb==='GET')&&(api.operation.path==='/metadata-url'))"
              execute:
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: |
                      //var transactionId = apim.getvariable('request.headers.x-transaction-id');
                      var globalTransactionId = apim.getvariable('request.headers.x-global-transaction-id');

                      apim.setvariable('message.headers.api-oauth-metadata-for-accesstoken', globalTransactionId);
                      //apim.setvariable('message.headers.api-oauth-metadata-for-payload', globalTransactionId);
            - condition: "((request.verb==='GET')&&(api.operation.path==='/metadata-url'))"
              execute:
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: |
                      //var transactionId = apim.getvariable('request.headers.x-transaction-id');
                      var globalTransactionId = apim.getvariable('request.headers.x-global-transaction-id');

                      apim.setvariable('message.headers.api-oauth-metadata-for-accesstoken', globalTransactionId);
                      //apim.setvariable('message.headers.api-oauth-metadata-for-payload', globalTransactionId);
            - condition: "((request.verb==='GET')&&(api.operation.path==='/scope-check'))"
              execute:
                - gatewayscript:
                    title: gatewayscript
                    version: 1.0.0
                    source: |-
                      var userId = apim.getvariable('oauth.resource-owner') || "";
                      apim.setvariable('message.headers.x-selected-scope', "a" + userId + "b");
                    description: 'This demos how to use both optional OAuth Provider->Advanced Scope Check , for either application or owner'
          version: 1.0.0
  phase: realized
  gateway: datapower-gateway
paths:
  /authentication-url:
    get:
      responses:
        '200':
          description: 200 OK
      security:
        - basic-1: []
  /onboard-login:
    get:
      responses:
        '200':
          description: 200 OK
  /redirect-url:
    get:
      responses:
        '200':
          description: 200 OK
  /authorization-url:
    get:
      responses:
        '200':
          description: 200 OK
  /myapp:
    get:
      responses:
        '200':
          description: 200 OK
  /metadata-url:
    get:
      responses:
        '200':
          description: 200 OK
  /scope-check:
    get:
      responses:
        '200':
          description: 200 OK
definitions: {}
tags: []
security: []
